/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: address44.proto */

#ifndef PROTOBUF_C_address44_2eproto__INCLUDED
#define PROTOBUF_C_address44_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Tutorial__Person Tutorial__Person;


/* --- enums --- */


/* --- messages --- */

struct  _Tutorial__Person
{
  ProtobufCMessage base;
  int32_t rolld;
  int32_t id;
  int32_t id3;
  int32_t id4;
  int32_t id5;
  int32_t id6;
  int32_t id7;
  int32_t id8;
  int32_t id9;
  int32_t id10;
  int32_t id11;
  int32_t id12;
  int32_t id13;
  int32_t id14;
  int32_t id15;
  int32_t id16;
  int32_t id17;
};
#define TUTORIAL__PERSON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tutorial__person__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


/* Tutorial__Person methods */
void   tutorial__person__init
                     (Tutorial__Person         *message);
size_t tutorial__person__get_packed_size
                     (const Tutorial__Person   *message);
size_t tutorial__person__pack
                     (const Tutorial__Person   *message,
                      uint8_t             *out);
size_t tutorial__person__pack_to_buffer
                     (const Tutorial__Person   *message,
                      ProtobufCBuffer     *buffer);
Tutorial__Person *
       tutorial__person__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tutorial__person__free_unpacked
                     (Tutorial__Person *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Tutorial__Person_Closure)
                 (const Tutorial__Person *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor tutorial__person__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_address44_2eproto__INCLUDED */
